/*
 * The contents of this file are subject to the Mozilla Public License Version 1.0
 * (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the License.
 *
 * The Original Code is 'dscsim'.
 *
 * The Initial Developer of the Original Code is William Pennoyer. Portions created by
 * the Initial Developer are Copyright (C) 2008, 2009.
 * All Rights Reserved.
 *
 * Contributor(s): all the names of the contributors are added in the source code
 * where applicable.
 */

package net.sourceforge.dscsim.controller.message.types;


import java.util.Calendar;
import java.util.Date;
import java.util.Properties;

import javax.persistence.Column;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import net.sourceforge.dscsim.controller.Constants;

/**
 * Dscmessage generated by hbm2java
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Dscmessage", propOrder = {
    "uid",
    "sender",
    "recipient",
    "position",
    "callTypeCd",
    "natureCd",
    "catagoryCd",
    "channel",
    "complianceCd",
    "complianceReasonCd",
    "ackdTime"
    
})
@XmlRootElement(name = "dscmessage")
public class Dscmessage 
	implements java.io.Serializable, Cloneable, Constants {

	// Fields    

    @XmlElement(required = true)
	private Date uid =Calendar.getInstance().getTime();
    @XmlElement(required = true)
	private String sender;
    @XmlElement(required = true)
	private String recipient;
    @XmlElement(required = true)
	private Position position = new Position();
    @XmlElement(required = true)
	private String callTypeCd;
    @XmlElement(required = true)
	private String natureCd;
    @XmlElement(required = true)
	private String catagoryCd;
    @XmlElement(required = true)
	private Integer channel;
    @XmlElement(required = true)
	private String complianceCd;
    @XmlElement(required = true)
	private String complianceReasonCd;
    @XmlElement(required = true)
	private Date ackdTime;

	// Constructors

	/** default constructor */
	public Dscmessage() {
	}

	public Dscmessage(Dscmessage other) {
		this.uid = other.uid != null ? other.uid : null;
		this.sender = other.sender != null ? other.sender : null;
		this.recipient = other.recipient != null ? other.recipient : null;
		this.position = other.position != null ? other.position.clone() : null;
		this.callTypeCd = other.callTypeCd != null ? other.callTypeCd : null;
		this.natureCd = other.natureCd != null ? other.natureCd : null;
		this.catagoryCd = other.catagoryCd != null ? other.catagoryCd : null;
		this.channel = other.channel != null ? other.channel : null;
		this.complianceCd = other.complianceCd != null ? other.complianceCd : null;
		this.complianceReasonCd = other.complianceReasonCd != null ? other.complianceReasonCd : null;
		this.ackdTime = other.ackdTime != null ? other.ackdTime : null;		
	}

	/** full constructor */
	public Dscmessage(Date uid, String sender, String recipient, String callTypeCd, String natureCd,
			String catagoryCd,Integer channel, String complianceCd, String complianceReasonCd,
			Date ackdTime) {
		this.uid = uid;
		this.sender = sender;
		this.recipient = recipient;
		this.callTypeCd = callTypeCd;
		this.natureCd = natureCd;
		this.catagoryCd = catagoryCd;
		this.channel = channel;
		this.complianceCd = complianceCd;
		this.complianceReasonCd = complianceReasonCd;
		this.ackdTime = ackdTime;
	}

	// Property accessors
	public Date getUid() {
		return this.uid;
	}

	public void setUid(Date uid) {
		this.uid = uid;
	}

	public String getSender() {
		return this.sender;
	}

	public void setSender(String sender) {
		this.sender = sender;
	}

	public String getRecipient() {
		return this.recipient;
	}

	public void setRecipient(String recipient) {
		this.recipient = recipient;
	}

	public String getCallTypeCd() {
		return this.callTypeCd;
	}

	public void setCallTypeCd(String callTypeCd) {
		this.callTypeCd = callTypeCd;
	}

	public String getNatureCd() {
		return this.natureCd;
	}

	public String getNatureText(Properties props) {
		return props.getProperty(this.getNatureCd(), this.getNatureCd());
	}

	public void setNatureCd(String natureCd) {
		this.natureCd = natureCd;
	}

	public String getCatagoryCd() {
		return this.catagoryCd;
	}

	public void setCatagoryCd(String catagoryCd) {
		this.catagoryCd = catagoryCd;
	}

	public Integer getChannel() {
		return this.channel;
	}
	
	public String getChannelStr() {
		return String.valueOf(this.channel);
	}

	public void setChannel(Integer channel) {
		this.channel = channel;
	}

	public String getComplianceCd() {
		return this.complianceCd;
	}

	public void setComplianceCd(String complianceCd) {
		this.complianceCd = complianceCd;
	}

	public String getComplianceReasonCd() {
		return this.complianceReasonCd;
	}

	public void setComplianceReasonCd(String complianceReasonCd) {
		this.complianceReasonCd = complianceReasonCd;
	}

	public Date getAckdTime() {
		return this.ackdTime;
	}

	public void setAckdTime(Date ackdTime) {
		this.ackdTime = ackdTime;
	}
	
	public boolean hasToMMSI(){
		return this.recipient != null && this.recipient.length()>0;
	}
	
	public String getFrom(){
		return this.sender;
	}

	public String getTo(){
		return this.recipient;
	}
    public Object clone(){
		return new Dscmessage(this);
    }
    public boolean isCallAcknowledgement(){
        
		String callType = this.getCallTypeCd();   		
		if(callType.equals(CALL_TYPE_INDIVIDUAL_ACK)
			|| callType.equals(CALL_TYPE_GROUP_ACK)
			|| callType.equals(CALL_TYPE_DISTRESS_ACK)
		|| callType.equals(CALL_TYPE_ALL_SHIPS_ACK)){
			
			return true;
		}else{
			return false;
		}   	
    }

	public boolean isAknowledged() {
		return this.ackdTime != null;
	}
	
	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof Dscmessage))
			return false;
		Dscmessage castOther = (Dscmessage) other;

		return ((this.getUid() == castOther.getUid()) || (this.getUid() != null
				&& castOther.getUid() != null && this.getUid().equals(
				castOther.getUid())))
				&& ((this.getSender() == castOther.getSender()) || (this
						.getSender() != null
						&& castOther.getSender() != null && this.getSender()
						.equals(castOther.getSender())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result
				+ (getUid() == null ? 0 : this.getUid().hashCode());
		result = 37 * result
				+ (getSender() == null ? 0 : this.getSender().hashCode());
		return result;
	}

	public Position getPosition() {
		return position;
	}

	public void setPosition(Position position) {
		this.position = position;
	}

}
